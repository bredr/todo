// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/todo.proto

package todo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Item struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	Due                  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=Due,proto3" json:"Due,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Created,proto3" json:"Created,omitempty"`
	HoursToComplete      int32                `protobuf:"varint,5,opt,name=HoursToComplete,proto3" json:"HoursToComplete,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f52905b89a1b23f, []int{0}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Item) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Item) GetDue() *timestamp.Timestamp {
	if m != nil {
		return m.Due
	}
	return nil
}

func (m *Item) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Item) GetHoursToComplete() int32 {
	if m != nil {
		return m.HoursToComplete
	}
	return 0
}

type Items struct {
	Items                []*Item  `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
	Total                int32    `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	Limit                int32    `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset               int32    `protobuf:"varint,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Items) Reset()         { *m = Items{} }
func (m *Items) String() string { return proto.CompactTextString(m) }
func (*Items) ProtoMessage()    {}
func (*Items) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f52905b89a1b23f, []int{1}
}

func (m *Items) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Items.Unmarshal(m, b)
}
func (m *Items) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Items.Marshal(b, m, deterministic)
}
func (m *Items) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Items.Merge(m, src)
}
func (m *Items) XXX_Size() int {
	return xxx_messageInfo_Items.Size(m)
}
func (m *Items) XXX_DiscardUnknown() {
	xxx_messageInfo_Items.DiscardUnknown(m)
}

var xxx_messageInfo_Items proto.InternalMessageInfo

func (m *Items) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Items) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Items) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Items) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ID struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f52905b89a1b23f, []int{2}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type Pagination struct {
	Limit                int32    `protobuf:"varint,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset               int32    `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f52905b89a1b23f, []int{3}
}

func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (m *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(m, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Pagination) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f52905b89a1b23f, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Item)(nil), "todo.Item")
	proto.RegisterType((*Items)(nil), "todo.Items")
	proto.RegisterType((*ID)(nil), "todo.ID")
	proto.RegisterType((*Pagination)(nil), "todo.Pagination")
	proto.RegisterType((*Empty)(nil), "todo.Empty")
}

func init() { proto.RegisterFile("pb/todo.proto", fileDescriptor_1f52905b89a1b23f) }

var fileDescriptor_1f52905b89a1b23f = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0xdb, 0x4a, 0xc3, 0x40,
	0x10, 0x65, 0xd3, 0x6c, 0x5b, 0x27, 0x78, 0x61, 0x29, 0x12, 0xf2, 0xd2, 0x10, 0x5f, 0x22, 0x48,
	0x0a, 0xd5, 0x27, 0x5f, 0x1b, 0xd1, 0x82, 0xa0, 0x2c, 0xf1, 0x03, 0x52, 0xbb, 0x2d, 0x81, 0x6e,
	0x27, 0x64, 0xa7, 0x82, 0xdf, 0xe2, 0xff, 0xf8, 0x5d, 0x92, 0x4d, 0x7a, 0xb1, 0x08, 0xbe, 0xcd,
	0x9c, 0x3d, 0x73, 0x66, 0xce, 0x59, 0x38, 0x2d, 0x67, 0x23, 0xc2, 0x39, 0x26, 0x65, 0x85, 0x84,
	0xc2, 0xad, 0xeb, 0x60, 0xb8, 0x44, 0x5c, 0xae, 0xd4, 0xc8, 0x62, 0xb3, 0xcd, 0x62, 0x44, 0x85,
	0x56, 0x86, 0x72, 0x5d, 0x36, 0xb4, 0xe8, 0x9b, 0x81, 0x3b, 0x25, 0xa5, 0xc5, 0x19, 0x38, 0xd3,
	0xd4, 0x67, 0x21, 0x8b, 0x4f, 0xa4, 0x33, 0x4d, 0x45, 0x08, 0x5e, 0xaa, 0xcc, 0x7b, 0x55, 0x94,
	0x54, 0xe0, 0xda, 0x77, 0xec, 0xc3, 0x21, 0x24, 0x6e, 0xa0, 0x93, 0x6e, 0x94, 0xdf, 0x09, 0x59,
	0xec, 0x8d, 0x83, 0xa4, 0xd9, 0x94, 0x6c, 0x37, 0x25, 0xd9, 0x76, 0x93, 0xac, 0x69, 0xe2, 0x0e,
	0x7a, 0x93, 0x4a, 0xe5, 0xa4, 0xe6, 0xbe, 0xfb, 0xef, 0xc4, 0x96, 0x2a, 0x62, 0x38, 0x7f, 0xc2,
	0x4d, 0x65, 0x32, 0x9c, 0xa0, 0x2e, 0x57, 0x8a, 0x94, 0xcf, 0x43, 0x16, 0x73, 0x79, 0x0c, 0x47,
	0x1a, 0x78, 0xed, 0xc3, 0x88, 0xb0, 0x2d, 0x7c, 0x16, 0x76, 0x62, 0x6f, 0x0c, 0x89, 0x0d, 0xa5,
	0x86, 0x64, 0xcb, 0x18, 0x00, 0xcf, 0x90, 0xf2, 0x95, 0x35, 0xc5, 0x65, 0xd3, 0xd4, 0xe8, 0x73,
	0xa1, 0x0b, 0xb2, 0x86, 0xb8, 0x6c, 0x1a, 0x71, 0x09, 0xdd, 0x97, 0xc5, 0xc2, 0x28, 0xb2, 0x57,
	0x73, 0xd9, 0x76, 0xd1, 0xa0, 0x8e, 0xeb, 0x38, 0xb4, 0xe8, 0x1e, 0xe0, 0x35, 0x5f, 0x16, 0xeb,
	0xdc, 0x06, 0xb4, 0x53, 0x64, 0x7f, 0x2b, 0x3a, 0xbf, 0x14, 0x7b, 0xc0, 0x1f, 0x74, 0x49, 0x9f,
	0xe3, 0x2f, 0x06, 0x6e, 0x86, 0x73, 0x14, 0x11, 0xc0, 0x5b, 0x69, 0x54, 0x45, 0xf6, 0x83, 0x0e,
	0x8c, 0x04, 0xfd, 0xb6, 0x4e, 0xc5, 0x35, 0xf4, 0x1f, 0x15, 0x35, 0xbe, 0x2e, 0x1a, 0x74, 0x7f,
	0x41, 0xe0, 0xed, 0x67, 0x8c, 0x18, 0x42, 0xaf, 0xa5, 0x8a, 0xdd, 0x7c, 0x70, 0xa0, 0x2a, 0xae,
	0x00, 0xa4, 0xd2, 0xf8, 0xa1, 0x8e, 0x38, 0xad, 0x8a, 0xbd, 0x6e, 0xd6, 0xb5, 0xdf, 0x75, 0xfb,
	0x13, 0x00, 0x00, 0xff, 0xff, 0x48, 0x29, 0x34, 0xc0, 0x6f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoClient is the client API for Todo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoClient interface {
	UpsertItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*ID, error)
	GetItems(ctx context.Context, in *Pagination, opts ...grpc.CallOption) (*Items, error)
	GetItem(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Item, error)
	RemoveItem(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Empty, error)
}

type todoClient struct {
	cc *grpc.ClientConn
}

func NewTodoClient(cc *grpc.ClientConn) TodoClient {
	return &todoClient{cc}
}

func (c *todoClient) UpsertItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*ID, error) {
	out := new(ID)
	err := c.cc.Invoke(ctx, "/todo.Todo/UpsertItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) GetItems(ctx context.Context, in *Pagination, opts ...grpc.CallOption) (*Items, error) {
	out := new(Items)
	err := c.cc.Invoke(ctx, "/todo.Todo/GetItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) GetItem(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := c.cc.Invoke(ctx, "/todo.Todo/GetItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoClient) RemoveItem(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/todo.Todo/RemoveItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServer is the server API for Todo service.
type TodoServer interface {
	UpsertItem(context.Context, *Item) (*ID, error)
	GetItems(context.Context, *Pagination) (*Items, error)
	GetItem(context.Context, *ID) (*Item, error)
	RemoveItem(context.Context, *ID) (*Empty, error)
}

func RegisterTodoServer(s *grpc.Server, srv TodoServer) {
	s.RegisterService(&_Todo_serviceDesc, srv)
}

func _Todo_UpsertItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Item)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).UpsertItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.Todo/UpsertItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).UpsertItem(ctx, req.(*Item))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_GetItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Pagination)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).GetItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.Todo/GetItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).GetItems(ctx, req.(*Pagination))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_GetItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).GetItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.Todo/GetItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).GetItem(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Todo_RemoveItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServer).RemoveItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.Todo/RemoveItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServer).RemoveItem(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Todo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todo.Todo",
	HandlerType: (*TodoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpsertItem",
			Handler:    _Todo_UpsertItem_Handler,
		},
		{
			MethodName: "GetItems",
			Handler:    _Todo_GetItems_Handler,
		},
		{
			MethodName: "GetItem",
			Handler:    _Todo_GetItem_Handler,
		},
		{
			MethodName: "RemoveItem",
			Handler:    _Todo_RemoveItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/todo.proto",
}
